USE CC_DW;
USE WAREHOUSE BI_WH;

/***** 1.Clustering: Create table with clustering *****/
DROP TABLE IF EXISTS EMPLOYEE;

CREATE TRANSIENT TABLE EMPLOYEE (
  NAME VARCHAR(25) NOT NULL,
  LAST_NAME VARCHAR(25) NOT NULL,
  COUNTRY VARCHAR(25) NULL, 
  INSERT_DT DATE NOT NULL
)
CLUSTER BY (NAME);

BEGIN TRANSACTION NAME t1;

    SELECT current_transaction();
    
    INSERT INTO EMPLOYEE (NAME, LAST_NAME, COUNTRY, INSERT_DT) VALUES 
        ('Luis', 'Fuentes', 'Mexico', to_date('2020.10.05', 'YYYY.MM.DD')),
        ('John', 'Doe', 'USA', current_date());
COMMIT;

--SELECT last_transaction();

SELECT * FROM EMPLOYEE;

/***** 2.Reclustering: No tasks are required to enable Automatic Clustering for a table. You simply define a clustering key for the table. *****/
ALTER TABLE EMPLOYEE CLUSTER BY (INSERT_DT);

/***** 3.Selecting Keys for cluster: Reducing cardinality and keep in mind this is a permutation therefore order matters *****/
SELECT * 
FROM "SNOWFLAKE_SAMPLE_DATA"."TPCH_SF100"."CUSTOMER"
LIMIT 100;

BEGIN TRANSACTION;
  CREATE OR REPLACE TEMPORARY TABLE CUSTOMER_NOCLUSTER
  AS
  SELECT * 
  FROM "SNOWFLAKE_SAMPLE_DATA"."TPCH_SF100"."CUSTOMER";
COMMIT;

DESC TABLE CUSTOMER_NOCLUSTER;

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_NOCLUSTER','(C_COMMENT)');

WITH RECURSIVE cte_1 (C_CUSTKEY, C_NAME, C_ADDRESS, C_NATIONKEY, C_PHONE, C_ACCTBAL, C_MKTSEGMENT, C_COMMENT) AS (
SELECT  COUNT(DISTINCT C_CUSTKEY),
        COUNT(DISTINCT C_NAME),
        COUNT(DISTINCT C_ADDRESS),
        COUNT(DISTINCT C_NATIONKEY),
        COUNT(DISTINCT C_PHONE),
        COUNT(DISTINCT C_ACCTBAL),
        COUNT(DISTINCT C_MKTSEGMENT),
        COUNT(DISTINCT C_COMMENT)
FROM CUSTOMER_NOCLUSTER
)
SELECT * 
FROM cte_1
 UNPIVOT(TOTAL for cols in (C_CUSTKEY, C_NAME, C_ADDRESS, C_NATIONKEY, C_PHONE, C_ACCTBAL, C_MKTSEGMENT, C_COMMENT))
ORDER BY 2 ASC;

SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_NOCLUSTER','(C_MKTSEGMENT, C_NATIONKEY)');

/***** 4.Creating table with cluster *****/
SELECT GET_DDL('TABLE','"CC_DW"."PUBLIC"."CUSTOMER_NOCLUSTER"');

CREATE OR REPLACE TRANSIENT TABLE CUSTOMER_CLUSTERED (
    c_custkey NUMBER(38,0) NOT NULL,
    c_name VARCHAR(25) NOT NULL,
    c_address VARCHAR(40) NOT NULL,
    c_nationkey NUMBER(38,0) NOT NULL,
    c_phone VARCHAR(15) NOT NULL,
    c_acctbal NUMBER(12,2) NOT NULL,
    c_mktsegment VARCHAR(10),
    c_comment VARCHAR(117)
) 
CLUSTER BY (C_MKTSEGMENT, C_NATIONKEY)
DATA_RETENTION_TIME_IN_DAYS=1;

BEGIN TRANSACTION;
  INSERT INTO CUSTOMER_CLUSTERED
  SELECT * 
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.CUSTOMER
  ORDER BY C_MKTSEGMENT, C_NATIONKEY;
COMMIT;

-- Take a look at the average_depth and average_overlaps
SELECT SYSTEM$CLUSTERING_INFORMATION('CUSTOMER_CLUSTERED');